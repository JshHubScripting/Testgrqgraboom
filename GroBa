-- Load AkaliNotif for notifications
local Library = loadstring(game:HttpGet("https://pastebin.com/raw/6HMp1NDn"))()
local AkaliNotif = loadstring(game:HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua"))()
local Notify = AkaliNotif.Notify

-- Show execution notification
Notify({
    Description = "N4.SHH",
    Title = "Silent aim?!?! please donâ€™t skidðŸ’€ðŸ’€",
    Duration = 7,
})

-- Create UI
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local N4Button = Instance.new("TextButton")
local FOVButton = Instance.new("TextButton")

ScreenGui.Parent = game.CoreGui

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.Size = UDim2.new(0, 120, 0, 90) -- Slightly larger rectangle
Frame.Position = UDim2.new(0, 10, 0, 10)
Frame.Draggable = true
Frame.Active = true
Frame.BorderSizePixel = 0
Frame.BackgroundTransparency = 0.3
Frame.BorderSizePixel = 10
Frame.ClipsDescendants = true

-- Function to apply rainbow effect
local function applyRainbowEffect(button)
    spawn(function()
        while true do
            for i = 0, 255, 5 do
                button.TextColor3 = Color3.fromHSV(i / 255, 1, 1)
                wait(0.05)
            end
        end
    end)
end

-- Create "N4.SHH" Button
N4Button.Parent = Frame
N4Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
N4Button.Size = UDim2.new(1, -10, 0, 30)
N4Button.Position = UDim2.new(0, 5, 0, 5)
N4Button.Font = Enum.Font.Arcade
N4Button.Text = "N4.SHH"
N4Button.TextScaled = true
N4Button.BackgroundTransparency = 0.3
applyRainbowEffect(N4Button)

-- Create "FOV" Button
FOVButton.Parent = Frame
FOVButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FOVButton.Size = UDim2.new(1, -10, 0, 30)
FOVButton.Position = UDim2.new(0, 5, 0, 45) -- Spaced below N4.SHH button
FOVButton.Font = Enum.Font.Arcade
FOVButton.Text = "FOV"
FOVButton.TextScaled = true
FOVButton.BackgroundTransparency = 0.3
applyRainbowEffect(FOVButton)

-- Silent Aim & FOV toggle variables
local silentAimEnabled = false
local fovEnabled = false
local fovCircle = Drawing.new("Circle")

-- Configure FOV circle
fovCircle.Visible = false
fovCircle.Color = Color3.new(0, 0, 0)
fovCircle.Thickness = 1
fovCircle.Radius = 100
fovCircle.Filled = false
fovCircle.Transparency = 1

-- Function to get the user's ping
local function getPing()
    return game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue()
end

-- Function to find closest player to crosshair
local function getClosestTarget()
    local localPlayer = game.Players.LocalPlayer
    local mouse = localPlayer:GetMouse()
    local closestTarget = nil
    local shortestDistance = math.huge

    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local targetPos = game.Workspace.CurrentCamera:WorldToScreenPoint(player.Character.HumanoidRootPart.Position)
            local distance = (Vector2.new(targetPos.X, targetPos.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude

            if distance < shortestDistance and distance < 250 then -- Adjust range if needed
                closestTarget = player
                shortestDistance = distance
            end
        end
    end
    return closestTarget
end

-- Function to calculate prediction strength based on ping
local function getPredictionStrength()
    local ping = getPing()

    if ping < 50 then
        return 0.1 -- Minimal prediction for low ping
    elseif ping < 150 then
        return 0.3 -- Moderate prediction for medium ping
    else
        return 0.5 -- Aggressive prediction for high ping
    end
end

-- Function to toggle silent aim
local function toggleSilentAim()
    silentAimEnabled = not silentAimEnabled

    if silentAimEnabled then
        local target = getClosestTarget()
        if target and target.Character then
            -- Prioritize head, but fallback to torso
            local hitPart = target.Character:FindFirstChild("Head") or target.Character:FindFirstChild("HumanoidRootPart")
            
            -- Get prediction strength based on ping
            local predictionStrength = getPredictionStrength()

            -- Apply prediction offset to target position
            local predictedPos = target.Character.HumanoidRootPart.Position + target.Character.HumanoidRootPart.Velocity * predictionStrength

            -- Mark the target with a yellow dot
            local dot = Instance.new("BillboardGui", hitPart)
            dot.Size = UDim2.new(0, 10, 0, 10)
            dot.StudsOffset = Vector3.new(0, 2, 0)

            local frame = Instance.new("Frame", dot)
            frame.BackgroundColor3 = Color3.fromRGB(255, 255, 0)
            frame.Size = UDim2.new(1, 0, 1, 0)
        end
    end
end

-- Function to toggle FOV circle
local function toggleFOV()
    fovEnabled = not fovEnabled
    fovCircle.Visible = fovEnabled
end

-- Button Click Events
N4Button.MouseButton1Click:Connect(toggleSilentAim)
FOVButton.MouseButton1Click:Connect(toggleFOV)

-- Keybinds (Q for Silent Aim, C for FOV)
game:GetService("UserInputService").InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.Q then
        toggleSilentAim()
    elseif input.KeyCode == Enum.KeyCode.C then
        toggleFOV()
    end
end)

-- Update FOV circle position
game:GetService("RunService").RenderStepped:Connect(function()
    if fovEnabled then
        local mousePos = game.Players.LocalPlayer:GetMouse().Hit.p
        fovCircle.Position = Vector2.new(mousePos.X, mousePos.Y)
    end
end)

-- Detect hits and send notifications
game:GetService("Players").LocalPlayer.Character.Humanoid.Touched:Connect(function(hit)
    local target = hit.Parent:FindFirstChildOfClass("Humanoid")
    if target then
        local partHit = hit.Name
        Notify({
            Title = "Hit Confirmed",
            Description = "You hit " .. target.Parent.Name .. " on the " .. partHit,
            Duration = 4,
        })
    end
end)
